{"version":3,"sources":["accordion.js"],"names":["getHeight","accordion","style","display","height","scrollHeight","addRole","item","roleValue","setAttribute","containsClass","value","classList","contains","wait","time","callback","setTimeout","open","add","close","remove","active","toggler","inActive","init","accordions","Array","from","forEach","querySelector","addEventListener","event"],"mappings":";AAkDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAlDP,IAAMA,EAAY,SAAAC,GACdA,EAAUC,MAAMC,QAAU,QACpBC,IAAAA,EAASH,EAAUI,aAAe,KAEjCD,OADPH,EAAUC,MAAMC,QAAU,GACnBC,GAGLE,EAAU,SAACC,EAAMC,GAAcD,OAAAA,EAAKE,aAAa,OAAQD,IAEzDE,EAAgB,SAACH,EAAMI,GAAUJ,OAAAA,EAAKK,UAAUC,SAASF,IAEzDG,EAAO,SAACC,EAAMC,GAAaC,OAAAA,WAAWD,EAAUD,IAEhDG,EAAO,SAAAjB,GACLG,IAAAA,EAASJ,EAAUC,GACzBA,EAAUW,UAAUO,IAAI,UAExBlB,EAAUC,MAAME,OAASA,EAEzBU,EAAK,IAAK,WACRb,EAAUQ,aAAa,cAAe,SACtCR,EAAUC,MAAME,OAAS,MAIvBgB,EAAQ,SAAAnB,GACZA,EAAUC,MAAME,OAASH,EAAUI,aAAe,KAElDS,EAAK,EAAG,WACNb,EAAUC,MAAME,OAAS,MAG3BU,EAAK,IAAK,WACRb,EAAUW,UAAUS,OAAO,UAC3BpB,EAAUQ,aAAa,cAAe,WAIpCa,EAAS,SAACC,EAAStB,GACvBsB,EAAQX,UAAUO,IAAI,UACtBI,EAAQd,aAAa,gBAAiB,QACtCS,EAAKjB,IAGDuB,EAAW,SAACD,EAAStB,GACzBsB,EAAQX,UAAUS,OAAO,UACzBE,EAAQd,aAAa,gBAAiB,SACtCW,EAAMnB,IAGKwB,EAAO,SAAAC,GAClBC,MAAMC,KAAKF,GAAYG,QAAQ,SAAStB,GACtCD,EAAQC,EAAM,WAERgB,IAAAA,EAAUhB,EAAKuB,cAAc,YAC7B7B,EAAYM,EAAKuB,cAAc,cAErCxB,EAAQL,EAAW,YACnBK,EAAQiB,EAAS,OACjBA,EAAQd,aAAa,WAAY,GAEjCc,EAAQd,aAAa,gBAAiB,SAEtCR,EAAUQ,aAAa,cAAe,QAEtCc,EAAQQ,iBAAiB,QAAS,SAAUC,GAE1CtB,EAAc,KAAM,UAElBc,EAAS,KAAMvB,GADfqB,EAAO,KAAMrB,QAlBd,QAAA,KAAA","file":"accordion.js","sourceRoot":"src/js","sourcesContent":["const getHeight = accordion => {\n    accordion.style.display = 'block'; // Make it visible\n    const height = accordion.scrollHeight + 'px'; // Get it's height\n    accordion.style.display = ''; //  Hide it again\n    return height;\n  };\n\nconst addRole = (item, roleValue) => item.setAttribute('role', roleValue)\n\nconst containsClass = (item, value) => item.classList.contains(value)\n\nconst wait = (time, callback) => setTimeout(callback, time)\n\nconst open = accordion => {\n  const height = getHeight(accordion);\n  accordion.classList.add('active')\n\n  accordion.style.height = height;\n\n  wait(350, function () {\n    accordion.setAttribute('aria-hidden', 'false')\n    accordion.style.height = '';\n  })\n}\n\nconst close = accordion => {\n  accordion.style.height = accordion.scrollHeight + 'px';\n\n  wait(1, () => {\n    accordion.style.height = '0';\n  })\n\n  wait(350, () => {\n    accordion.classList.remove('active')\n    accordion.setAttribute('aria-hidden', 'true')\n  })\n}\n\nconst active = (toggler, accordion) => {\n  toggler.classList.add('active')\n  toggler.setAttribute('aria-expanded', 'true')\n  open(accordion)\n}\n\nconst inActive = (toggler, accordion) => {\n  toggler.classList.remove('active')\n  toggler.setAttribute('aria-expanded', 'false')\n  close(accordion)\n}\n\nexport const init = accordions => {\n  Array.from(accordions).forEach(function(item) {\n    addRole(item, 'tablist')\n\n    const toggler = item.querySelector('.toggler')\n    const accordion = item.querySelector('.accordion')\n\n    addRole(accordion, 'tabpanel')\n    addRole(toggler, 'tab')\n    toggler.setAttribute('tabindex', 0)\n\n    toggler.setAttribute('aria-expanded', 'false');\n\n    accordion.setAttribute('aria-hidden', 'true')\n\n    toggler.addEventListener('click', function (event) {\n\n    (!containsClass(this, 'active'))\n      ? active(this, accordion)\n      : inActive(this, accordion)\n    })\n  })\n}\n"]}